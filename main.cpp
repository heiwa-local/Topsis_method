//
//  main.cpp
//  01
//
//  Created by kunari on 10.03.2021.
//

#include <iostream>
#include <string>
#include <cmath>

using namespace std;

int main(int argc, const char * argv[]) {
    double w[3];
    w[0] = 0.35;
    w[1] = 0.30;
    w[2] = 0.25;
    
    string c[3];
    c[0] = "Цена/кг";
    c[1] = "Качество";
    c[2] = "Стоимость доставки/тону";
    
    string a[3];
    a[0] = "Никель-строй (Никель)";
    a[1] = "Ликвимолли (Бензин)";
    a[2] = "Хлебо-соль (Продукты питания)";
    
    double x[3][3];
    x[0][0] = 1.0;
    x[0][1] = 1.0;
    x[0][2] = 1.0;
    x[1][0] = 2.0;
    x[1][1] = 2.0;
    x[1][2] = 2.0;
    x[2][0] = 50.0;
    x[2][1] = 50.0;
    x[2][2] = 50.0;
    
    double p[3][3];
    p[0][0] = x[0][0]/ pow(((pow(x[0][0],2)) + (pow(x[1][0],2)) + (pow(x[2][0],2)) ),0.5);
    p[1][0] = x[1][0]/ pow(((pow(x[0][0],2)) + (pow(x[1][0],2)) + (pow(x[2][0],2)) ),0.5);
    p[2][0] = x[2][0]/ pow(((pow(x[0][0],2)) + (pow(x[1][0],2)) + (pow(x[2][0],2)) ),0.5);

    p[0][1] = x[0][1]/ pow(((pow(x[0][1],2)) + (pow(x[1][1],2)) + (pow(x[2][1],2)) ),0.5);
    p[1][1] = x[1][1]/ pow(((pow(x[0][1],2)) + (pow(x[1][1],2)) + (pow(x[2][1],2)) ),0.5);
    p[2][1] = x[2][1]/ pow(((pow(x[0][1],2)) + (pow(x[1][1],2)) + (pow(x[2][1],2)) ),0.5);
    
    p[0][2] = x[0][2]/ pow(((pow(x[0][2],2)) + (pow(x[1][2],2)) + (pow(x[2][2],2)) ),0.5);
    p[1][2] = x[1][2]/ pow(((pow(x[0][2],2)) + (pow(x[1][2],2)) + (pow(x[2][2],2)) ),0.5);
    p[2][2] = x[2][2]/ pow(((pow(x[0][2],2)) + (pow(x[1][2],2)) + (pow(x[2][2],2)) ),0.5);

    double v[3][3];
    v[0][0] = p[0][0] * w[0];
    v[1][0] = p[1][0] * w[0];
    v[2][0] = p[2][0] * w[0];
    
    v[0][1] = p[0][1] * w[1];
    v[1][1] = p[1][1] * w[1];
    v[2][1] = p[2][1] * w[1];
    
    v[0][2] = p[0][2] * w[2];
    v[1][2] = p[1][2] * w[2];
    v[2][2] = p[2][2] * w[2];
    
    double m[2][3]; //V+ V-
    
    for (int j = 0; j < 2; j++){
        if (v[j][0] >= v[j+1][0]){
            m[0][0] = v[j][0];
        }
    }
    for (int j = 0; j < 2; j++){
        if (v[j][1] <= v[j+1][1]){
            m[0][1] = v[j][1];
        }
    }
    for (int j = 0; j < 2; j++){
        if (v[j][2] <= v[j+1][2]){
            m[0][2] = v[j][2];
        }
    }
    
    for (int j = 0; j < 2; j++){
        if (v[j][0] <= v[j+1][0]){
            m[1][0] = v[j][0];
        }
    }
    for (int j = 0; j < 2; j++){
        if (v[j][1] >= v[j+1][1]){
            m[1][1] = v[j][1];
        }
    }
    for (int j = 0; j < 2; j++){
        if (v[j][2] >= v[j+1][2]){
            m[1][2] = v[j][2];
        }
    }

    double si[2][3];
    
    si[0][0] = pow(pow((v[0][0] - m[0][0]),2) + pow((v[0][1]- m[0][1]),2) + pow((v[0][2]- m[0][2]),2),0.5);
    si[0][1] = pow(pow((v[1][0] - m[0][0]),2) + pow((v[1][1]- m[0][1]),2) + pow((v[1][2]- m[0][2]),2),0.5);
    si[0][2] = pow(pow((v[2][0] - m[0][0]),2) + pow((v[2][1]- m[0][1]),2) + pow((v[2][2]- m[0][2]),2),0.5);
    
    si[1][0] = pow(pow((v[0][0] - m[1][0]),2) + pow((v[0][1]- m[1][1]),2) + pow((v[0][2]- m[1][2]),2),0.5);
    si[1][1] = pow(pow((v[1][0] - m[1][0]),2) + pow((v[1][1]- m[1][1]),2) + pow((v[1][2]- m[1][2]),2),0.5);
    si[1][2] = pow(pow((v[2][0] - m[1][0]),2) + pow((v[2][1]- m[1][1]),2) + pow((v[2][2]- m[1][2]),2),0.5);
    
    double pi[3];
    
    pi[0] = si[1][0] / (si[0][0] + si[1][0]);
    pi[1] = si[1][1] / (si[0][1] + si[1][1]);
    pi[2] = si[1][2] / (si[0][2] + si[1][2]);
    
    for (int i = 0; i < 3; i++){
        cout << pi[i] << endl;
    }
    return 0;
}
